
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/metrics/plot_calibration_curve_script.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_metrics_plot_calibration_curve_script.py>`
        to download the full example code. or to run this example in your browser via JupyterLite or Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_metrics_plot_calibration_curve_script.py:


====================================
plot_calibration_curve with examples
====================================

An example showing the plot_calibration_curve method
used by a scikit-learn classifier

.. GENERATED FROM PYTHON SOURCE LINES 9-73



.. image-sg:: /auto_examples/metrics/images/sphx_glr_plot_calibration_curve_script_001.png
   :alt: Calibration Curves (Reliability Diagrams)
   :srcset: /auto_examples/metrics/images/sphx_glr_plot_calibration_curve_script_001.png
   :class: sphx-glr-single-img





.. code-block:: Python


    # Authors: scikit-plots developers
    # License: MIT

    from sklearn.datasets import (
        make_classification,
        load_breast_cancer as data_2_classes,
        load_iris as data_3_classes,
        load_digits as data_10_classes,
    )
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    from sklearn.naive_bayes import GaussianNB
    from sklearn.svm import LinearSVC
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import cross_val_predict
    import numpy as np; np.random.seed(0)
    # importing pylab or pyplot
    import matplotlib.pyplot as plt

    # Import scikit-plot
    import scikitplot as skplt

    # Load the data
    X, y = make_classification(
        n_samples=100000, 
        n_features=20,
        n_informative=4,
        n_redundant=2,
        n_repeated=0,
        n_classes=3,
        n_clusters_per_class=2,
        random_state=0
    )
    X_train, y_train, X_val, y_val = X[:1000], y[:1000], X[1000:], y[1000:]

    # Create an instance of the LogisticRegression
    lr_probas = LogisticRegression().fit(X_train, y_train).predict_proba(X_val)
    nb_probas = GaussianNB().fit(X_train, y_train).predict_proba(X_val)
    svc_scores = LinearSVC().fit(X_train, y_train).decision_function(X_val)
    rf_probas = RandomForestClassifier().fit(X_train, y_train).predict_proba(X_val)

    probas_dict = {
        LogisticRegression(): lr_probas,
        GaussianNB(): nb_probas,
        LinearSVC(): svc_scores,
        RandomForestClassifier(): rf_probas,
    }
    # Plot!
    ax = skplt.metrics.plot_calibration_curve(
        y_val,
        y_prob_list=list(probas_dict.values()),
        y_is_decision=list([False, False, True, False]),
        n_bins=10, 
        clf_names=list(probas_dict.keys()),
        multi_class=None,
        class_index=2, 
        classes_to_plot=[2],
    );
    # Adjust layout to make sure everything fits
    plt.tight_layout()
    # Save the plot to a file
    # plt.savefig('plot_calibration_curve_script.png')
    # Display the plot
    plt.show(block=True)

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.616 seconds)


.. _sphx_glr_download_auto_examples_metrics_plot_calibration_curve_script.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/scikit-plots/scikit-plots/main?urlpath=lab/tree/notebooks/auto_examples/metrics/plot_calibration_curve_script.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: lite-badge

      .. image:: images/jupyterlite_badge_logo.svg
        :target: ../../lite/lab/index.html?path=auto_examples/metrics/plot_calibration_curve_script.ipynb
        :alt: Launch JupyterLite
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_calibration_curve_script.ipynb <plot_calibration_curve_script.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_calibration_curve_script.py <plot_calibration_curve_script.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_calibration_curve_script.zip <plot_calibration_curve_script.zip>`


.. include:: plot_calibration_curve_script.recommendations


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
